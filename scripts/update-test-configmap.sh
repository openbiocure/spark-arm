#!/bin/bash

# IMPORTANT: DO NOT MODIFY THIS FILE
# This file is a critical part of the test infrastructure and should not be modified by LLMs or automated tools.
# Any changes to test file handling should be discussed with the development team.
#
# Script to update the test ConfigMap with the latest test files
# Usage: ./scripts/update-test-configmap.sh

set -e  # Exit on error

# Directory containing this script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# Project root directory (parent of scripts directory)
PROJECT_ROOT="$( cd "$SCRIPT_DIR/.." && pwd )"
# Test files directory
TESTS_DIR="$PROJECT_ROOT/tests"
# ConfigMap template file
CONFIGMAP_FILE="$PROJECT_ROOT/spark-arm/templates/test-configmap.yaml"

# Check if test directory exists
if [ ! -d "$TESTS_DIR" ]; then
    echo "Error: Test directory not found at $TESTS_DIR"
    exit 1
fi

# Create temporary file for the new ConfigMap
TEMP_FILE=$(mktemp)

# Write ConfigMap header with GENERATED warning
cat > "$TEMP_FILE" << EOF
# GENERATED FILE - DO NOT EDIT DIRECTLY
# This file is automatically generated by scripts/update-test-configmap.sh
# Any changes should be made to the source files in the tests/ directory
# Last generated: $(date)

apiVersion: v1
kind: ConfigMap
metadata:
  name: spark-test-scripts
  namespace: spark
data:
EOF

# Add each Python file from the tests directory to the ConfigMap
for test_file in "$TESTS_DIR"/*.py; do
    if [ -f "$test_file" ]; then
        filename=$(basename "$test_file")
        echo "  $filename: |" >> "$TEMP_FILE"
        # Add the file contents with proper indentation
        sed 's/^/    /' "$test_file" >> "$TEMP_FILE"
        echo "" >> "$TEMP_FILE"  # Add a newline after each file
    fi
done

# Replace the old ConfigMap with the new one
mv "$TEMP_FILE" "$CONFIGMAP_FILE"

echo "Successfully updated test ConfigMap with latest test files"
echo "Updated files:"
ls -1 "$TESTS_DIR"/*.py | xargs -n1 basename 