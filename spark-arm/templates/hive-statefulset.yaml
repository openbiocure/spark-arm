apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "spark-arm.fullname" . }}-hive
  labels:
    {{- include "spark-arm.labels" . | nindent 4 }}
    app.kubernetes.io/component: hive
spec:
  serviceName: {{ include "spark-arm.fullname" . }}-hive
  replicas: {{ .Values.hive.replicaCount }}
  selector:
    matchLabels:
      {{- include "spark-arm.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: hive
  template:
    metadata:
      labels:
        {{- include "spark-arm.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: hive
    spec:
      serviceAccountName: {{ include "spark-arm.serviceAccountName" . }}
      securityContext:
        fsGroup: 1000
      containers:
        - name: hive
          image: "{{ .Values.hive.image.repository }}:{{ .Values.hive.image.tag }}"
          imagePullPolicy: {{ .Values.hive.image.pullPolicy }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          command:
            - /bin/bash
            - -c
            - start-hive.sh
          env:
            # PostgreSQL Connection
            - name: POSTGRES_HOST
              value: "{{ .Values.postgres.host }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.postgres.port }}"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: spark-arm-postgres
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: spark-arm-postgres
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: spark-arm-postgres
                  key: database
            # Hive Metastore
            - name: HIVE_METASTORE_URI
              value: "thrift://localhost:{{ .Values.hive.service.metastorePort }}"
            - name: HIVE_METASTORE_HOST
              value: "localhost"
            - name: HIVE_METASTORE_PORT
              value: {{ .Values.hive.service.metastorePort | quote }}
            # HiveServer2
            - name: HIVE_SERVER2_HOST
              value: "0.0.0.0"
            - name: HIVE_SERVER2_PORT
              value: {{ .Values.hive.server2.port | quote }}
            - name: HIVE_SERVER2_AUTHENTICATION
              value: {{ .Values.hive.server2.authentication | quote }}
            - name: HIVE_SERVER2_SASL_ENABLED
              value: {{ .Values.hive.server2.sasl.enabled | quote }}
            - name: HIVE_SERVER2_SASL_QOP
              value: {{ .Values.hive.server2.sasl.qop | quote }}
            # Hive Directories
            - name: HIVE_WAREHOUSE_DIR
              value: {{ .Values.hive.warehouseDir | quote }}
            - name: HIVE_SCRATCH_DIR
              value: {{ .Values.hive.scratchDir | quote }}
            # Hive Logging
            - name: HIVE_LOG_LEVEL
              value: {{ .Values.hive.logging.level | quote }}
            # MinIO/S3 Configuration
            - name: AWS_ENDPOINT_URL
              value: {{ .Values.minio.endpoint | quote }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "spark-arm.fullname" . }}-minio
                  key: s3a-access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "spark-arm.fullname" . }}-minio
                  key: s3a-secret-key
            - name: MINIO_BUCKET
              value: {{ .Values.minio.bucket | quote }}
            {{- with .Values.hive.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: metastore
              containerPort: {{ .Values.hive.service.metastorePort }}
              protocol: TCP
            - name: server2
              containerPort: {{ .Values.hive.service.server2Port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.hive.resources | nindent 12 }}
          volumeMounts:
            - name: hive-logs
              mountPath: /opt/hive/logs
            - name: hive-warehouse
              mountPath: /opt/hive/warehouse
            - name: hive-scratch
              mountPath: /opt/hive/scratch
            - name: hadoop-libs
              mountPath: /opt/hadoop/lib
              subPath: lib
            - name: hadoop-conf
              mountPath: /opt/hadoop/etc/hadoop
              subPath: etc/hadoop
            - name: hive-conf
              mountPath: /opt/hive/conf
              subPath: conf
      volumes:
        - name: hive-logs
          persistentVolumeClaim:
            claimName: {{ include "spark-arm.fullname" . }}-hive-logs
        - name: hive-warehouse
          persistentVolumeClaim:
            claimName: {{ include "spark-arm.fullname" . }}-hive-warehouse
        - name: hive-scratch
          persistentVolumeClaim:
            claimName: {{ include "spark-arm.fullname" . }}-hive-scratch
        - name: hadoop-libs
          emptyDir: {}
        - name: hadoop-conf
          emptyDir: {}
        - name: hive-conf
          emptyDir: {}
      {{- with .Values.hive.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hive.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hive.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "spark-arm.fullname" . }}-hive-logs
  labels:
    {{- include "spark-arm.labels" . | nindent 4 }}
    app.kubernetes.io/component: hive
spec:
  accessModes:
    - {{ .Values.hive.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.hive.persistence.size }}
  storageClassName: {{ .Values.hive.persistence.storageClass }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "spark-arm.fullname" . }}-hive-warehouse
  labels:
    {{- include "spark-arm.labels" . | nindent 4 }}
    app.kubernetes.io/component: hive
spec:
  accessModes:
    - {{ .Values.hive.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.hive.persistence.size }}
  storageClassName: {{ .Values.hive.persistence.storageClass }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "spark-arm.fullname" . }}-hive-scratch
  labels:
    {{- include "spark-arm.labels" . | nindent 4 }}
    app.kubernetes.io/component: hive
spec:
  accessModes:
    - {{ .Values.hive.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.hive.persistence.size }}
  storageClassName: {{ .Values.hive.persistence.storageClass }} 