# Log4j2 template for Apache Hive
status = INFO
name = HiveLog4j2
monitorInterval = 30

# Property definitions (set via -Dsysprop=... in JVM)
property.hive.log.level = INFO
property.hive.log.dir = /opt/hive/logs
property.hive.log.file = hive.log
property.hive.perflogger.log.level = INFO

# Appenders
appenders = console, file

# Console Appender
appender.console.type = Console
appender.console.name = console
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%t] %c{1} - %m%n

# Rolling File Appender
appender.file.type = RollingRandomAccessFile
appender.file.name = file
appender.file.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}
appender.file.filePattern = ${sys:hive.log.dir}/${sys:hive.log.file}.%d{yyyy-MM-dd}
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%t] %c{1} - %m%n
appender.file.policies.type = Policies
appender.file.policies.time.type = TimeBasedTriggeringPolicy
appender.file.policies.time.interval = 1
appender.file.policies.time.modulate = true
appender.file.strategy.type = DefaultRolloverStrategy
appender.file.strategy.max = 30

# Custom loggers
loggers = DataNucleus, PerfLogger, AmazonAws, ApacheHttp

logger.DataNucleus.name = DataNucleus
logger.DataNucleus.level = WARN

logger.PerfLogger.name = org.apache.hadoop.hive.ql.log.PerfLogger
logger.PerfLogger.level = ${sys:hive.perflogger.log.level}
logger.PerfLogger.additivity = false
logger.PerfLogger.appenderRefs = console, file
logger.PerfLogger.appenderRef.console.ref = console
logger.PerfLogger.appenderRef.file.ref = file

logger.AmazonAws.name = com.amazonaws
logger.AmazonAws.level = WARN

logger.ApacheHttp.name = org.apache.http
logger.ApacheHttp.level = WARN

# Root logger
rootLogger.level = ${sys:hive.log.level}
rootLogger.appenderRefs = console, file
rootLogger.appenderRef.console.ref = console
rootLogger.appenderRef.file.ref = file